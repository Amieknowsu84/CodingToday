class Solution {
   
   boolean dp[][];
    
   boolean findSum(int arr[],int index,int toFind){
    
        for(int i=0;i<dp.length;i++)
                    dp[i][0]=true;
       
        for(int i=1;i<dp.length;i++){
            for(int j=1;j<dp[0].length;j++){
                if(j==0)
                    dp[i][j]=true;
                if(arr[i-1]<=j)
                    dp[i][j]=dp[i-1][j]||dp[i-1][j-arr[i-1]];
                else
                    dp[i][j]=dp[i-1][j];
            }
        }
       

      return dp[index][toFind];
    }

    public boolean canPartition(int[] arr) {
         
         int sum=0;
        
         for(int i:arr)
            sum+=i;
         if(sum%2!=0)
           return false;
         else{
             int toFind=(sum/2);
             int len=arr.length;
             dp = new boolean[arr.length+1][toFind+1]; 
             
             return findSum(arr,len,toFind);   
         }
      }
}